# Papers I like
## Type theory
=> https://bentnib.org/quantitative-type-theory.pdf Syntax and Semantics of Quantitative Type Theory
=> http://www.cse.chalmers.se/~ulfn/papers/meta-variables.pdf Type checking in the presence of meta-variables
=> https://github.com/AndrasKovacs/implicit-fun-elaboration/raw/master/paper.pdf Elaboration with First-Class Implicit Function Types
=> https://web.cecs.pdx.edu/~mpj/thih/thih.pdf Typing Haskell in Haskell
## Unix
=> http://harmful.cat-v.org/cat-v/unix_prog_design.ps UNIX Style, or cat -v Considered Harmful
## Logic
=> http://girard.perso.math.cnrs.fr/linear.pdf Linear Logic
## Functional Programming
=> http://thecorememory.com/Next_700.pdf The Next 700 Programming Languages
=> https://link.springer.com/content/pdf/10.1007%2F978-3-319-91908-9_15.pdf The Next 7000 Programming Languages
### Implementation
=> https://www.microsoft.com/en-us/research/publication/implementing-lazy-functional-languages-on-stock-hardware-the-spineless-tagless-g-machine/ Implementing Lazy Functional Languages on Stock Hardware: The Spineless Tagless G-machine
=> http://okmij.org/ftp/tagless-final/ski.pdf Î» to SKI, Semantically Declarative Pearl
=> http://homepage.cs.uiowa.edu/~astump/papers/stump-fu-jfp-2016.pdf Efficiency of Lambda-Encodings in Total Type Theory
=> http://www.mbsd.cs.ru.nl/publications/papers/1990/groj90-CodeGenerator.pdf Implementing the ABC-machine on M680x0 based architectures
=> http://doi.acm.org/10.1145/2746325.2746330 Church Encoding of Data Types Considered Harmful for Implementations: Functional Pearl
## Parsing
=> http://www.cs.nott.ac.uk/~pszgmh/pearl.pdf Monadic Parsing in Haskell
=> http://www.cs.uu.nl/research/techreps/repo/CS-2008/2008-044.pdf Combinator Parsing: A Short Tutorial